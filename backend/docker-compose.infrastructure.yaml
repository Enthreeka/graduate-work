services:
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: elasticsearch
    ports:
      - '9200:9200'
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cat/health?h=status | grep -q green" ]
      retries: 20
      interval: 5s

  kibana:
    image: kibana:8.11.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=true
      - xpack.fleet.isAirGapped=true
      - xpack.security.encryptionKey=ce4ef0e9d2345c64ef336cd02ba5d85c
      - xpack.encryptedSavedObjects.encryptionKey=ce4ef0e9d2345c64ef336cd02ba5d85c
      - xpack.reporting.encryptionKey=ce4ef0e9d2345c64ef336cd02ba5d85c
      - xpack.reporting.kibanaServer.hostname=localhost
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5601" ]
      retries: 20
      interval: 5s

  logstash:
    image: logstash:8.11.0
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always

  redis:
    image: redis
    ports:
      - "6379:6379"

  db:
    image: postgres:16
    restart: always
    ports:
      - "5435:5432"
    volumes:
      -  postgres_data:/var/lib/postgresql/data
      - ./aggregator-service/migration:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=movie
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -q -U postgres -d postgres" ]
      interval: 5s
      timeout: 30s
      retries: 10
      start_period: 30s

  filebeat:
    labels:
      co.elastic.logs/enabled: false
    user: root
    image: elastic/filebeat:8.11.0
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat:/usr/share/filebeat/filebeat.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:

  # FOR METRICS
  #  apm-server:
  #    image: elastic/apm-server:8.13.0
  #    depends_on:
  #      elasticsearch:
  #        condition: service_healthy
  #      kibana:
  #        condition: service_healthy
  #    cap_add: [ "CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID" ]
  #    cap_drop: [ "ALL" ]
  #    ports:
  #      - 8200:8200
  #    command: >
  #      apm-server -e
  #        -E apm-server.rum.enabled=true
  #        -E setup.kibana.host=kibana:5601
  #        -E setup.template.settings.index.number_of_replicas=0
  #        -E apm-server.kibana.enabled=true
  #        -E apm-server.kibana.host=kibana:5601
  #        -E output.elasticsearch.hosts=["elasticsearch:9200"]
  #    healthcheck:
  #      interval: 10s
  #      retries: 12
  #      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/