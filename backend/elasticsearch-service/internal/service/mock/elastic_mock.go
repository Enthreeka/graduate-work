// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go
//
// Generated by this command:
//
//	mockgen -source usecase.go -destination mock/elastic_mock.go
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	entity "github.com/Enthreeka/elasticsearch-service/internal/entity"
	gomock "go.uber.org/mock/gomock"
)

// MockElasticService is a mock of ElasticService interface.
type MockElasticService struct {
	ctrl     *gomock.Controller
	recorder *MockElasticServiceMockRecorder
}

// MockElasticServiceMockRecorder is the mock recorder for MockElasticService.
type MockElasticServiceMockRecorder struct {
	mock *MockElasticService
}

// NewMockElasticService creates a new mock instance.
func NewMockElasticService(ctrl *gomock.Controller) *MockElasticService {
	mock := &MockElasticService{ctrl: ctrl}
	mock.recorder = &MockElasticServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockElasticService) EXPECT() *MockElasticServiceMockRecorder {
	return m.recorder
}

// Index mocks base method.
func (m *MockElasticService) Index(ctx context.Context, data *entity.Test) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Index", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Index indicates an expected call of Index.
func (mr *MockElasticServiceMockRecorder) Index(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockElasticService)(nil).Index), ctx, data)
}

// IndexBulkAPI mocks base method.
func (m *MockElasticService) IndexBulkAPI(ctx context.Context, data []*entity.Test) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IndexBulkAPI", ctx, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// IndexBulkAPI indicates an expected call of IndexBulkAPI.
func (mr *MockElasticServiceMockRecorder) IndexBulkAPI(ctx, data any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IndexBulkAPI", reflect.TypeOf((*MockElasticService)(nil).IndexBulkAPI), ctx, data)
}

// Search mocks base method.
func (m *MockElasticService) Search(ctx context.Context) (*entity.SearchResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", ctx)
	ret0, _ := ret[0].(*entity.SearchResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search.
func (mr *MockElasticServiceMockRecorder) Search(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockElasticService)(nil).Search), ctx)
}
